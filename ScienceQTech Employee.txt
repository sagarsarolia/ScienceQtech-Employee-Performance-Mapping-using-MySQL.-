/*Create a database named employee, then import data_science_team.csv proj_table.csv and emp_record_table.csv 
into the employee database from the given resources.*/
create database employee;
use employee;

/*Importing Data in the following Tables in employee database*/
select * from data_science_team;
select * from emp_record_table;
select * from proj_table;
/*Write a query to fetch EMP_ID, FIRST_NAME, LAST_NAME, GENDER, and DEPARTMENT from the employee record table, 
and make a list of employees and details of their department.*/

select EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT
from emp_record_table;
select concat(First_name,' ',last_name) as employees_Name, dept
from emp_record_table;
/*Write a query to fetch EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPARTMENT, and EMP_RATING if the EMP_RATING is: 
less than two
greater than four 
between two and four*/
/*1. When EMP_RATING is less than Two*/
select EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING
from emp_record_table
where EMP_RATING<2;
/*2. When EMP_RATING is greater than four*/
select EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING
from emp_record_table
where EMP_RATING>4;
/*3. When EMP_RATING is between Two and Four*/
select EMP_ID, FIRST_NAME, LAST_NAME, GENDER, DEPT, EMP_RATING
from emp_record_table
where EMP_RATING between 2 and 4;
/*Write a query to concatenate the FIRST_NAME and the LAST_NAME of employees in the Finance department 
from the employee table and then give the resultant column alias as NAME*/
select concat(FIRST_NAME,' ',LAST_NAME) as NAME 
from emp_record_table
where DEPT='FINANCE';
/*Write a query to list only those employees who have someone reporting to them. 
 Also, show the number of reporters (including the President).*/
select concat(e.first_name,' ', e.last_name) as employees, concat(m.first_name,' ', m.last_name) as manager
from emp_record_table e
inner join emp_record_table m
on m.emp_id=e.manager_id
group by employees;
/*Write a query to list down all the employees from the healthcare and finance departments using union. 
  Take data from the employee record table. */
select concat(first_name,' ',last_name) as employees_name from emp_record_table
where dept='Healthcare'
union all
select concat(first_name,' ',last_name) from emp_record_table
where dept='Finance';
/*list down employee details such as EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPARTMENT, and EMP_RATING grouped by dept.
 Also include the respective employee rating along with the max emp rating for the department.*/
select EMP_ID, FIRST_NAME, LAST_NAME, ROLE, DEPT, EMP_RATING, emp_rating as max_rating  
from emp_record_table
where (dept, emp_rating) in (select dept, max(emp_rating) from emp_record_table group by dept)
order by dept asc;
/*Write a query to calculate the minimum and the maximum salary of the employees in each role. 
 Take data from the employee record table*/
select role, min(salary) as min_salary, max(salary) as max_salary  
from emp_record_table
group by role;
/*Write a query to assign ranks to each employee based on their experience. Take data from the employee record table*/
select concat(first_name,' ',last_name) as emp_name, exp, dense_rank() OVER ( order by exp desc ) 
AS 'Rank'
from emp_record_table;
/*Write a query to create a view that displays employees in various countries whose salary is more than six thousand. 
Take data from the employee record table.*/
create view employees_view as
select concat(first_name,' ',last_name), country
from emp_record_table
where salary>6000;
alter view employees_view as 
select concat(first_name,' ',last_name), country, salary
from emp_record_table
where salary>6000;

select * from employees_view;
/*Write a nested query to find employees with experience of more than ten years. Take data from the employee record table.*/
select concat(first_name,' ',last_name) as employee_name, exp
from (select * 
	  from emp_record_table
	  where exp>10) as derived_table;
/*Query to create a stored procedure to retrieve the details of the employees whose experience is more than three years. 
Take data from the employee record table.*/
delimiter //
create procedure exp_more_than_three()
begin
select concat(first_name,' ',last_name) from emp_record_table
where exp>3;
end //
call exp_more_than_three();
/*Write a query using stored functions in the project table 
to check whether the job profile assigned to each employee in the data science team 
matches the organization’s set standard.*/
DELIMITER $$
CREATE FUNCTION employee_job_profile(EXP int)
RETURNS VARCHAR(50)
DETERMINISTIC
BEGIN
DECLARE employee_job_profile VARCHAR(50);
 IF EXP <= 2 THEN
SET employee_job_profile = 'JUNIOR DATA SCIENTIST';
 ELSEIF EXP BETWEEN 2 AND 5 THEN
SET employee_job_profile = 'ASSOCIATE DATA SCIENTIST';
 ELSEIF EXP BETWEEN 5 AND 10 THEN
SET employee_job_profile = 'SENIOR DATA SCIENTIST';
ELSEIF EXP BETWEEN 10 AND 12 THEN
SET employee_job_profile = 'LEAD DATA SCIENTIST';
ELSEIF EXP BETWEEN 12 AND 16 THEN
SET employee_job_profile = 'MANAGER';
 END IF;
 RETURN (employee_job_profile);
END$$
SELECT EMP_ID, FIRST_NAME, EXP, employee_job_profile(EXP)
FROM emp_record_table;
/*Create an index to improve the cost and performance of the query to find the employee 
whose FIRST_NAME is ‘Eric’ in the employee table after checking the execution plan.*/
CREATE INDEX FirstName ON emp_record_table (FIRST_NAME(10));
EXPLAIN SELECT EMP_ID, FIRST_NAME, LAST_NAME
FROM emp_record_table
WHERE FIRST_NAME = 'Eric';
/*Write a query to calculate the bonus for all the employees, based on their ratings and salaries
 (Use the formula: 5% of salary * employee rating).*/
 select concat(first_name,' ',last_name), salary, (salary*.05*emp_rating) from emp_record_table;
 /*Write a query to calculate the average salary distribution based on the continent and country. 
 Take data from the employee record table.*/
 select avg(salary), continent  from emp_record_table group by continent;
 select avg(salary), country  from emp_record_table group by country;